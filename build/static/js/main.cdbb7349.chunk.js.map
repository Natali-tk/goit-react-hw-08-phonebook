{"version":3,"sources":["redux/auth/auth-operations.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/contacts/contacts-operations.js","components/Container/Container.js","redux/contacts/contacts-slicer.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/auth/auth-selectors.js","components/UserMenu/avatar.png","components/UserMenu/UserMenu.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","App.js","redux/auth/auth-slicer.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","toast","success","error","logIn","logOut","fetchCurrentUser","_","getState","rejectWithValue","state","persistedToken","auth","get","module","exports","fetchContacts","addContacts","contact","deleteContacts","id","delete","Container","children","className","s","container","contactsSlice","createSlice","name","initialState","items","filter","reducers","changeFilter","payload","extraReducers","fulfilled","actions","contactReducer","reducer","getIsLoggedIn","isLoggedIn","getUserName","user","UserMenu","dispatch","useDispatch","useSelector","avatar","defaultAvatar","userMenu","src","alt","width","userName","type","onClick","Navigation","to","link","activeClassName","activeLink","exact","AuthNav","AppBar","header","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","component","position","autoClose","authReducer","email","action","console","log","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","persistReducer","contacts","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cdbb7349.chunk.js","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer  ${token}`;\r\n  },\r\n  unset(token) {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    toast.success('Congratulations, you are registered!');\r\n    return data;\r\n  } catch {\r\n    toast.error('Try again');\r\n  }\r\n});\r\n\r\nexport const logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    toast.success('You are loged in!');\r\n    return data;\r\n  } catch {\r\n    toast.error('Try again');\r\n  }\r\n});\r\n\r\nexport const logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    toast.success('You are loged out!');\r\n    token.unset();\r\n  } catch {\r\n    toast.error('Try again');\r\n  }\r\n});\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  \"auth/refresh\",\r\n  async (_, {getState,rejectWithValue}) => {\r\n    const state = getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get(\"/users/current\");\r\n      return data;\r\n    } catch (error) {\r\n      toast.error('Try again');\r\n    }\r\n  },\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1i-09\",\"activeLink\":\"Navigation_activeLink__259Oj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__SN7S7\",\"activeLink\":\"AuthNav_activeLink__I9oeU\"};","import { toast } from 'react-toastify';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async () => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch {\r\n      toast.error('There are no contacts');\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContacts = createAsyncThunk(\r\n  'contacts/addContacts',\r\n  async contact => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      return data;\r\n    } catch {\r\n      toast.error(\"Cann't add contact\");\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n  'contacts/deleteContacts',\r\n  async id=> {\r\n    try {\r\n      await axios.delete(`/contacts/${id}`);\r\n      return id;\r\n    } catch {\r\n      toast.error(\"Cann't delete contact\");\r\n    }\r\n  },\r\n);\r\n","import s from './Container.module.css';\r\n\r\nexport default function Container({children}){\r\n    return <div className={s.container}>{children}</div>;\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContacts,\r\n  addContacts,\r\n  deleteContacts,\r\n} from './contacts-operations';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    items: [],\r\n    filter: '',\r\n  },\r\n  reducers: {\r\n    changeFilter: (_, { payload }) => payload,\r\n  },\r\n  extraReducers: {\r\n    [fetchContacts.fulfilled]: (state, { payload }) => (state.items = payload),\r\n    [addContacts.fulfilled]: (state, { payload }) =>\r\n      state.items = [payload,...state.items],\r\n    [deleteContacts.fulfilled]: (state, { payload }) =>\r\n      state.items.filter(contact => contact.id !== payload),\r\n  },\r\n});\r\n\r\nexport const { changeFilter } = contactsSlice.actions;\r\n\r\nconst contactReducer = contactsSlice.reducer;\r\nexport default contactReducer;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1gecg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2vVBo\"};","export const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getUserName = state => state.auth.user.name;\r\n","export default __webpack_public_path__ + \"static/media/avatar.d49c0a87.png\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport defaultAvatar from './avatar.png';\r\nimport s from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(getUserName);\r\n  const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div className={s.userMenu}>\r\n      <img src={avatar} alt=\"avatar\" width=\"34\" className={s.avatar} />\r\n      <span className={s.userName}>Wellcome, {name}</span>\r\n      <button type=\"button\" onClick={() => dispatch(logOut())}>\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './Navigation.module.css';\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to=\"/\"\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Home\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Registartion\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Log In\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\n\r\nimport UserMenu from 'components/UserMenu/UserMenu';\r\n\r\nimport s from './AppBar.module.css';\r\nimport Navigation from 'components/Navigation/Navigation';\r\nimport AuthNav from 'components/AuthNav/AuthNav';\r\n\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { Switch, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, Suspense,lazy } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport Container from 'components/Container/Container';\nimport AppBar from 'components/AppBar/AppBar';\n// import RegisterView from 'views/RegisterView';\n// import LoginView from 'views/LoginView';\n// import ContactsView from 'views/ContactsView';\nimport { fetchCurrentUser } from 'redux/auth/auth-operations';\nconst HomeView=lazy(()=>import('views/HomeView'));\nconst RegisterView=lazy(()=>import('views/RegisterView'));\nconst LoginView= lazy(()=>import('views/LoginView'));\nconst ContactsView=lazy(()=>import('views/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(fetchCurrentUser()), [dispatch]);\n  return (\n    <Container>\n      <AppBar />\n\n      <Switch>\n      <Suspense fallback={<p>Загружаем...</p>}>\n         <Route path=\"/\" component={HomeView} />\n        <Route path=\"/register\" component={RegisterView} />\n        <Route path=\"/login\" component={LoginView} />\n        <Route path=\"/contacts\" component={ContactsView} />\n      </Suspense>\n      </Switch>\n      <ToastContainer position=\"bottom-left\" autoClose={3000} />\n    </Container>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { fetchCurrentUser, logIn, logOut, register } from './auth-operations';\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logOut.fulfilled](state, action) {\r\n        state.user = { name: null, email: null };\r\n        state.token = null;\r\n        state.isLoggedIn = false;\r\n      },\r\n     [fetchCurrentUser.fulfilled](state, action) {\r\n      console.log(action);\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n    }, \r\n  },\r\n});\r\n\r\nconst authReducer = authSlice.reducer;\r\nexport default authReducer;\r\n","import contactReducer  from './contacts/contacts-slicer';\r\nimport authReducer from './auth/auth-slicer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: authReducer,\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport {store, persistor} from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}> \n    <PersistGate loading={null} persistor={persistor}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}