{"version":3,"sources":["views/View.module.css","components/ContactForm/ContactForm.module.css","components/AuthNav/AuthNav.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Modal/Modal.module.css","components/AppBar/AppBar.module.css","components/Container/Container.js","redux/auth/auth-selectors.js","redux/auth/auth-operations.js","components/UserMenu/avatar.png","components/UserMenu/UserMenu.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","views/RegisterView.js","views/LoginView.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/Filter/Filter.jsx","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Modal/Modal.js","views/ContactsView.js","App.js","redux/auth/auth-slicer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","toast","error","logIn","logOut","UserMenu","dispatch","useDispatch","useSelector","avatar","defaultAvatar","userMenu","src","alt","width","userName","type","onClick","Navigation","to","exact","link","activeClassName","activeLink","AuthNav","AppBar","header","LoginView","useState","setName","email","setEmail","password","setPassword","onSubmit","e","preventDefault","form","autoComplete","label","value","onChange","target","changeFilter","createAction","getContacts","contacts","getFilter","filter","getFilterContacts","createSelector","contact","toLowerCase","includes","Filter","findFild","inputFind","fetchContacts","get","addContacts","deleteContacts","contactId","delete","ContactForm","number","setNumber","id","uuidv4","find","alert","saveContacts","lable","input","pattern","title","required","submitBtn","PropsType","PropTypes","func","isRequired","ContactList","useEffect","contactList","map","icon","buttonDelete","onDeleteClick","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onClose","handleBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","createPortal","backdrop","modalContent","Component","ContactsView","isModalOpen","setIsModalOpen","toggleModal","onSave","App","path","component","RegisterView","position","autoClose","authReducer","createSlice","initialState","extraReducers","fulfilled","action","payload","_","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","persistReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,sB,mBCApDD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,UAAY,iC,mBCArID,EAAOC,QAAU,CAAC,KAAO,sBAAsB,WAAa,8B,mBCA5DD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,aAAe,kCAAkC,KAAO,4B,6DCAjHD,EAAOC,QAAU,CAAC,SAAW,yBAAyB,UAAY,4B,mBCAlED,EAAOC,QAAU,CAAC,SAAW,wBAAwB,aAAe,8B,wCCApED,EAAOC,QAAU,CAAC,OAAS,yB,0LCCZ,SAASC,EAAT,GAA+B,IAAXC,EAAU,EAAVA,SAC/B,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,ICHlC,IAAMI,EAAe,SAAAC,GAAK,OAAGA,EAAMC,KAAKC,YAClCC,EAAY,SAAAH,GAAK,OAAEA,EAAMC,KAAKG,KAAKC,M,gDCGhDC,IAAMC,SAASC,QAAU,wCACzB,IAAMC,EAAM,SACNA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,kBAAuDH,IAFrDA,EAAM,SAIJA,GACJH,IAAMC,SAASG,QAAQC,OAAOC,cAAc,IAInCC,EAAWC,YAAiB,gBAAD,uCAAkB,WAAMC,GAAN,iBAAAC,EAAA,+EAE/BV,IAAMW,KAAK,eAAgBF,GAFI,uBAE9CG,EAF8C,EAE9CA,KACRT,EAAUS,EAAKT,OAHuC,kBAI/CS,GAJ+C,gCAMtDC,IAAMC,MAAM,aAN0C,yDAAlB,uDAU3BC,EAAOP,YAAiB,aAAD,uCAAe,WAAMC,GAAN,iBAAAC,EAAA,+EAEtBV,IAAMW,KAAK,eAAgBF,GAFL,uBAErCG,EAFqC,EAErCA,KACRT,EAAUS,EAAKT,OAH8B,kBAItCS,GAJsC,gCAM7CC,IAAMC,MAAM,aANiC,yDAAf,uDAUvBE,EAAOR,YAAiB,cAAD,sBAAgB,sBAAAE,EAAA,+EAEtCV,IAAMW,KAAK,gBAF2B,OAG5CR,IAH4C,+CAK5CU,IAAMC,MAAM,aALgC,yDClCrC,MAA0B,mC,iBCM1B,SAASG,IACtB,IAAMC,EAAWC,cACXpB,EAAOqB,YAAYvB,GACnBwB,EAASC,EAEf,OACE,sBAAKhC,UAAWC,IAAEgC,SAAlB,UACE,qBAAKC,IAAKH,EAAQI,IAAI,SAASC,MAAM,KAAKpC,UAAWC,IAAE8B,SACvD,uBAAM/B,UAAWC,IAAEoC,SAAnB,uBAAwC5B,KACxC,wBAAQ6B,KAAK,SAASC,QAAS,kBAAMX,EAASF,MAA9C,wB,sCCVS,SAASc,IACtB,OACE,8BACE,cAAC,IAAD,CACEC,GAAG,YACHC,OAAK,EACL1C,UAAWC,IAAE0C,KACbC,gBAAiB3C,IAAE4C,WAJrB,wB,qBCJS,SAASC,IACtB,OACE,gCACE,cAAC,IAAD,CACEL,GAAG,YACHC,OAAK,EACL1C,UAAWC,IAAE0C,KACbC,gBAAiB3C,IAAE4C,WAJrB,0BAQA,cAAC,IAAD,CACEJ,GAAG,SACHC,OAAK,EACL1C,UAAWC,IAAE0C,KACbC,gBAAiB3C,IAAE4C,WAJrB,uBCLS,SAASE,IACtB,IAAMzC,EAAawB,YAAY3B,GAC/B,OACE,yBAAQH,UAAWC,IAAE+C,OAArB,UACE,cAACR,EAAD,IACClC,EAAa,cAACqB,EAAD,IAAe,cAACmB,EAAD,O,6BCVpB,SAASG,IACtB,IAAMrB,EAAWC,cACjB,EAAqBqB,mBAAS,IAA9B,mBAAOzC,EAAP,KAAY0C,EAAZ,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAgCH,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAQA,OACE,gCACE,8CACA,uBAAMC,SATW,SAAAC,GACnBA,EAAEC,iBACF9B,EAASX,EAAS,CAAER,OAAM2C,QAAOE,eAODtD,UAAWC,IAAE0D,KAAMC,aAAa,MAA9D,UACA,wBAAO5D,UAAWC,IAAE4D,MAApB,iBAEI,uBACEvB,KAAK,OACL7B,KAAK,OACLqD,MAAOrD,EACPsD,SAAU,SAAAN,GAAC,OAAIN,EAAQM,EAAEO,OAAOF,aAGpC,wBAAO9D,UAAWC,IAAE4D,MAApB,kBAEE,uBACEvB,KAAK,QACL7B,KAAK,QACLqD,MAAOV,EACPW,SAAU,SAAAN,GAAC,OAAIJ,EAASI,EAAEO,OAAOF,aAGrC,wBAAO9D,UAAWC,IAAE4D,MAApB,qBAEE,uBACEvB,KAAK,WACL7B,KAAK,WACLqD,MAAOR,EACPS,SAAU,SAAAN,GAAC,OAAIF,EAAYE,EAAEO,OAAOF,aAGxC,wBAAQxB,KAAK,SAAb,gCC3CO,SAASW,IACtB,IAAMrB,EAAWC,cACjB,EAA0BqB,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAgCH,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KASA,OACE,gCACE,wCACA,uBAAMC,SAVW,SAAAC,GACnBA,EAAEC,iBACF9B,EAASH,EAAM,CAAE2B,QAAOE,cACxBD,EAAS,IACTE,EAAY,KAMoBvD,UAAWC,IAAE0D,KAAMC,aAAa,MAA9D,UACE,wBAAO5D,UAAWC,IAAE4D,MAApB,kBAEE,uBACEvB,KAAK,QACL7B,KAAK,QACLqD,MAAOV,EACPW,SAAU,SAAAN,GAAC,OAAIJ,EAASI,EAAEO,OAAOF,aAGrC,wBAAO9D,UAAWC,IAAE4D,MAApB,qBAEE,uBACEvB,KAAK,WACL7B,KAAK,WACLqD,MAAOR,EACPS,SAAU,SAAAN,GAAC,OAAIF,EAAYE,EAAEO,OAAOF,aAGxC,wBAAQxB,KAAK,SAAb,yBCpCD,IAAM2B,EAAcC,YAAa,kB,GAGNA,YAAa,iCACbA,YAAa,kCACfA,YAAa,gCAGbA,YAAa,+BACbA,YAAa,gCACfA,YAAa,8BAERA,YAAa,kCACbA,YAAa,mCACfA,YAAa,iCAERA,YAClC,mCAEoCA,YACpC,mCAEkCA,YAAa,iC,OCvBtCC,EAAc,SAAA/D,GAAK,OAAIA,EAAMgE,UAC7BC,EAAY,SAAAjE,GAAK,OAAIA,EAAMkE,QAE3BC,EAAoBC,YAC/B,CAACL,EAAaE,IACd,SAACD,EAAUE,GAAX,OACEF,EAASE,QAAO,SAAAG,GAAO,OACrBA,EAAQhE,KAAKiE,cAAcC,SAASL,EAAOI,qB,iBCFlC,SAASE,KACtB,IAAMd,EAAQhC,YAAYuC,GACpBzC,EAAWC,cAGjB,OACE,wBAAO7B,UAAWC,IAAE4E,SAApB,kCAEE,uBACE7E,UAAWC,IAAE6E,UACbxC,KAAK,OACL7B,KAAK,SACLqD,MAAOA,EACPC,SAVW,SAAAN,GAAC,OAAI7B,EAASqC,EAAaR,EAAEO,OAAOF,c,iCCLvDpD,IAAMC,SAASC,QAAU,wCAElB,IAAMmE,GAAgB7D,YAC3B,yBAD2C,sBAE3C,8BAAAE,EAAA,+EAEyBV,IAAMsE,IAAI,aAFnC,uBAEU1D,EAFV,EAEUA,KAFV,kBAGSA,GAHT,gCAKEC,IAAMC,MAAM,yBALd,0DAUWyD,GAAc/D,YACzB,uBADyC,uCAEzC,WAAMuD,GAAN,iBAAArD,EAAA,+EAEyBV,IAAMW,KAAK,YAAaoD,GAFjD,uBAEUnD,EAFV,EAEUA,KAFV,kBAGSA,GAHT,gCAKEC,IAAMC,MAAM,sBALd,yDAFyC,uDAY9B0D,GAAehE,YAC1B,0BAD0C,uCAE1C,WAAMiE,GAAN,SAAA/D,EAAA,+EAEQV,IAAM0E,OAAN,oBAA0BD,IAFlC,gCAGSA,GAHT,gCAKI5D,IAAMC,MAAM,yBALhB,wDAF0C,uD,oBCtB7B,SAAS6D,KACtB,MAAwBnC,mBAAS,IAAjC,mBAAOzC,EAAP,KAAa0C,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOoC,EAAP,KAAeC,EAAf,KACMnB,EAAWtC,YAAYqC,GACvBvC,EAAWC,cACX4C,EAAU,CAACe,GAAIC,eAAShF,OAAK6E,UAqBnC,OACE,uBAAOtF,UAAWC,KAAE0D,KAAMH,SAnBP,SAAAC,GACnBA,EAAEC,iBAEkBU,EAASsB,MAC3B,SAAAjB,GAAO,OAAIA,EAAQhE,KAAKiE,gBAAkBjE,EAAKiE,iBAI/CiB,MAAM,GAAD,OAAIlF,EAAJ,8BAVU,SAAAgE,GAAS7C,EAASqD,GAAYR,IAa7CmB,CAAanB,GACbtB,EAAQ,IACRoC,EAAU,MAMZ,UACE,wBAAOvF,UAAWC,KAAE4F,MAApB,iBAEE,uBACE7F,UAAWC,KAAE6F,MACbxD,KAAK,OACL7B,KAAK,OACLqD,MAAOrD,EACPsF,QAAQ,yHACRC,MAAM,kcACNjC,SAAU,SAAAN,GAAC,OAAIN,EAAQM,EAAEO,OAAOF,QAChCmC,UAAQ,OAIZ,wBAAOjG,UAAWC,KAAE4F,MAApB,mBAEE,uBACE7F,UAAWC,KAAE6F,MACbxD,KAAK,MACL7B,KAAK,SACLqD,MAAOwB,EACPS,QAAQ,yFACRC,MAAM,giBACNjC,SAAU,SAAAN,GAAC,OAAI8B,EAAU9B,EAAEO,OAAOF,QAClCmC,UAAQ,OAIZ,wBAAQ3D,KAAK,SAAStC,UAAWC,KAAEiG,UAAnC,4BAONb,GAAYc,UAAY,CACtB3C,SAAU4C,KAAUC,KAAKC,Y,iCC9DZ,SAASC,KACtB,IAAMnC,EAAWtC,YAAYyC,GACvB3C,EAAWC,cAGjB,OADA2E,qBAAU,kBAAM5E,EAASmD,QAAkB,CAACnD,IAE1C,oBAAI5B,UAAWC,KAAEwG,YAAjB,SACGrC,EAASsC,KAAI,YAA2B,IAAxBlB,EAAuB,EAAvBA,GAAI/E,EAAmB,EAAnBA,KAAM6E,EAAa,EAAbA,OACzB,OACE,qBAAatF,UAAWC,KAAEwE,QAA1B,UACE,cAAC,KAAD,CAAgBzE,UAAWC,KAAE0G,OAC7B,8BACGlG,EADH,KACW6E,KAEX,wBACEtF,UAAWC,KAAE2G,aACbtE,KAAK,SACLC,QAAS,kBAdC,SAAAiD,GAAE,OAAI5D,EAASsD,GAAeM,IAczBqB,CAAcrB,IAH/B,sBALOA,Q,4DChBbsB,GAAWC,SAASC,cAAc,eACnBC,G,+MAQlBC,cAAc,SAAAzD,GACE,WAATA,EAAE0D,MACD,EAAKC,MAAMC,W,EAGnBC,oBAAoB,SAAA7D,GACbA,EAAE8D,gBAAgB9D,EAAEO,QACtB,EAAKoD,MAAMC,W,wDAdf,WACIG,OAAOC,iBAAiB,UAAWC,KAAKR,iB,kCAE7C,WACCM,OAAOG,oBAAoB,UAAWD,KAAKR,iB,oBAa5C,WACI,OAAOU,uBACH,qBAAK5H,UAAWC,KAAE4H,SAAUtF,QAASmF,KAAKJ,oBAA1C,SACI,qBAAKtH,UAAWC,KAAE6H,aAAlB,SAAiCJ,KAAKN,MAAMrH,aAEhD+G,Q,GAvBwBiB,aCIpB,SAASC,KACxB,MAAoC9E,oBAAS,GAAtC+E,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,eACdC,EAAY,kBAAID,GAAe,SAAA9H,GAAK,OAAGA,MAG3C,OACE,eAACN,EAAD,WACE,2CACA,cAAC8E,GAAD,IACA,cAAC2B,GAAD,IACC0B,GACG,eAAC,GAAD,CAAOZ,QAASc,EAAhB,UACA,cAAC9C,GAAD,CAAc+C,OAAQD,IACtB,iDCdO,SAASE,KAExB,OACE,eAACvI,EAAD,WACE,cAACiD,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuF,KAAK,YAAYC,UAAWC,IACnC,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWtF,IAChC,cAAC,IAAD,CAAOqF,KAAK,YAAYC,UAAWP,QAErC,cAAC,IAAD,CAAgBS,SAAS,cAAcC,UAAW,S,6CCYzCC,GAvBGC,YAAY,CAC5BnI,KAAM,OACNoI,aARmB,CACnBrI,KAAM,CAAEC,KAAM,KAAM2C,MAAO,MAC3BvC,MAAO,KACPP,YAAY,GAMZwI,eAAa,sBACV7H,EAAS8H,WADC,SACU3I,EAAO4I,GAC1B5I,EAAMI,KAAOwI,EAAOC,QAAQzI,KAC5BJ,EAAMS,MAAQmI,EAAOC,QAAQpI,MAC7BT,EAAME,YAAa,KAJV,gBAMVmB,EAAMsH,WANI,SAMO3I,EAAO4I,GACvB5I,EAAMI,KAAOwI,EAAOC,QAAQzI,KAC5BJ,EAAMS,MAAQmI,EAAOC,QAAQpI,MAC7BT,EAAME,YAAa,KATV,gBAWVoB,EAAOqH,WAXG,SAWQ3I,EAAO8I,GACtB9I,EAAMI,KAAO,CAAEC,KAAM,KAAM2C,MAAO,MAClChD,EAAMS,MAAQ,KACdT,EAAME,YAAa,KAdZ,MAmBe6I,Q,iDCdxBC,GAAU,uBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdC,OAGIC,GAAoB,CACxBC,IAAKrB,GACLsB,aACAC,UAAW,CAAC,UAGDC,GAAQC,YAAe,CAClCjB,QAAS,CACP9I,KAAMgK,aAAeN,GAAmBpB,IACxCvE,SAAUkG,MAEZlB,cACAmB,UAAUC,IAGCC,GAAYC,aAAaP,IC9BtCQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAQA,GAAlB,SACA,cAAC,IAAD,CAAaW,QAAS,KAAML,UAAWA,GAAvC,SACA,cAAC,IAAD,UACA,cAACpC,GAAD,YAKFtB,SAASgE,eAAe,W","file":"static/js/main.ba123c44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"View_form__3HI_4\",\"label\":\"View_label__24Jrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2PRYH\",\"lable\":\"ContactForm_lable__2kXXu\",\"input\":\"ContactForm_input__cZ7WP\",\"submitBtn\":\"ContactForm_submitBtn__1emuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__SN7S7\",\"activeLink\":\"AuthNav_activeLink__I9oeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__UJB7S\",\"buttonDelete\":\"ContactList_buttonDelete__2P1_n\",\"icon\":\"ContactList_icon__2fHQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findFild\":\"Filter_findFild__3ptQx\",\"inputFind\":\"Filter_inputFind__mcoH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2u-mW\",\"modalContent\":\"Modal_modalContent__1hzp1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2vVBo\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({children}){\r\n    return <div className={s.container}>{children}</div>;\r\n}","export const getIsLoggedIn =state=> state.auth.isLoggedIn;\r\nexport const getUserName=state=>state.auth.user.name;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\nconst token={\r\n  set(token){\r\n    axios.defaults.headers.common.Authorization=`Bearer  ${token}`;\r\n  },\r\n  unset(token){\r\n    axios.defaults.headers.common.Authorization='';\r\n  }\r\n}\r\n\r\nexport const register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/user/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch {\r\n    toast.error('Try again');\r\n  }\r\n});\r\n\r\nexport const logIn= createAsyncThunk('auth/login', async credentials => {\r\n    try {\r\n      const { data } = await axios.post('/user/signup', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch {\r\n      toast.error('Try again');\r\n    }\r\n  });\r\n\r\nexport const logOut=createAsyncThunk('auth/logout', async ()=>{\r\n    try{\r\n        await axios.post('/user/logout');\r\n        token.unset();\r\n    } catch{\r\n        toast.error('Try again');  \r\n    }\r\n});\r\n  \r\n\r\n","export default __webpack_public_path__ + \"static/media/avatar.d49c0a87.png\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport defaultAvatar from './avatar.png';\r\nimport s from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(getUserName);\r\n  const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div className={s.userMenu}>\r\n      <img src={avatar} alt=\"avatar\" width=\"34\" className={s.avatar} />\r\n      <span className={s.userName}>Wellcome, {name}</span>\r\n      <button type=\"button\" onClick={() => dispatch(logOut())}>\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './Navigation.module.css';\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Registartion\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Log In\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\n\r\nimport UserMenu from 'components/UserMenu/UserMenu';\r\n\r\nimport s from './AppBar.module.css';\r\nimport Navigation from 'components/Navigation/Navigation';\r\nimport AuthNav from 'components/AuthNav/AuthNav';\r\n\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { register} from '../redux/auth/auth-operations';\r\nimport s from './View.module.css';\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [name,setName]=useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(register({ name, email, password }));\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Registration</h1>\r\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n      <label className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Registartion</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {logIn } from '../redux/auth/auth-operations';\r\nimport s from './View.module.css';\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Log In</h1>\r\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n        <label className={s.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Enter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const changeFilter= createAction('contact/filter');\r\n\r\n\r\nexport const fetchContactsRequest=createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess=createAction('contacts/ fetchContactsSuccess');\r\nexport const fetchContactsError=createAction('contacts/ fetchContactsError');\r\n\r\n\r\nexport const addContactsRequest=createAction('contacts/addContactsRequest');\r\nexport const addContactsSuccess=createAction('contacts/ addContactsSuccess');\r\nexport const addContactsError=createAction('contacts/ addContactsError');\r\n\r\nexport const deleteContactsRequest=createAction('contacts/deleteContactsRequest');\r\nexport const deleteContactsSuccess=createAction('contacts/ deleteContactsSuccess');\r\nexport const deleteContactsError=createAction('contacts/ deleteContactsError');\r\n\r\nexport const toggleCompletedRequest = createAction(\r\n    'contacts/toggleCompletedRequest',\r\n  );\r\n  export const toggleCompletedSuccess = createAction(\r\n    'contacts/toggleCompletedSuccess',\r\n  );\r\n  export const toggleCompletedError = createAction('contacts/toggleCompletedError');","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts;\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getFilterContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n// import{connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { changeFilter } from 'redux/contacts/contacts-actions';\r\nimport { getFilter } from 'redux/contacts/contacts-selectors';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.findFild}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.inputFind}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\n","// import * as contactsActions from './contacts-actions';\r\nimport { toast } from 'react-toastify';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async()=>{\r\n    try{\r\n    const { data } = await axios.get('/contacts');\r\n    return data;\r\n  }catch{\r\n    toast.error('There are no contacts');\r\n  }\r\n  }\r\n);\r\n\r\nexport const addContacts = createAsyncThunk(\r\n  \"contacts/addContacts\",\r\n  async contact =>{\r\n    try{\r\n    const { data } = await axios.post('/contacts', contact);\r\n    return data;\r\n  }catch{\r\n    toast.error(\"Cann't add contact\");\r\n  }\r\n  }\r\n);\r\n\r\nexport const deleteContacts=createAsyncThunk(\r\n  \"contacts/deleteContacts\",\r\n  async(contactId)=>{\r\n    try{\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    return contactId;\r\n    }catch{\r\n      toast.error(\"Cann't delete contact\");\r\n    }\r\n  }\r\n)\r\n\r\n\r\n// export const fetchContacts = () => async dispatch => {\r\n//   dispatch(contactsActions.fetchContactsRequest());\r\n//   try {\r\n//     const { data } = await axios.get('/contacts');\r\n//     dispatch(contactsActions.fetchContactsSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(contactsActions.fetchContactsError(error));\r\n//   }\r\n// };\r\n\r\n// export const addContacts =\r\n//   ({ id, name, number }) =>\r\n//   async dispatch => {\r\n//     const contact = {\r\n//       id,\r\n//       name,\r\n//       number,\r\n//     };\r\n//     dispatch(contactsActions.addContactsRequest());\r\n//     try {\r\n//       const { data } = await axios.post('/contacts', contact);\r\n//       dispatch(contactsActions.addContactsSuccess(data));\r\n//     } catch (error) {\r\n//       dispatch(contactsActions.addContactsError(error));\r\n//     }\r\n//   };\r\n\r\n// export const deleteContacts = contactId => async dispatch => {\r\n//   dispatch(contactsActions.deleteContactsRequest());\r\n//   try {\r\n//     await axios.delete(`/contacts/${contactId}`);\r\n//     dispatch(contactsActions.deleteContactsSuccess(contactId));\r\n//   } catch (error) {\r\n//     dispatch(contactsActions.deleteContactsError(error));\r\n//   }\r\n// };\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {addContacts} from 'redux/contacts/contacts-operations';\r\nimport {getContacts} from 'redux/contacts/contacts-selectors';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const contact = {id: uuidv4(),name,number};\r\n  const saveContacts=contact=>dispatch(addContacts(contact));\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    const findContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (findContact) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    } else {\r\n      saveContacts(contact);\r\n      setName('');\r\n      setNumber('');\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <form  className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.lable}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={e => setName(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={s.lable}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={e => setNumber(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.submitBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.PropsType = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { MdContactPhone } from 'react-icons/md';\r\nimport { getFilterContacts } from 'redux/contacts/contacts-selectors';\r\nimport {\r\n  fetchContacts,\r\n  deleteContacts,\r\n} from 'redux/contacts/contacts-operations';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getFilterContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteClick = id => dispatch(deleteContacts(id));\r\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.contact}>\r\n            <MdContactPhone className={s.icon} />\r\n            <p>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              className={s.buttonDelete}\r\n              type=\"button\"\r\n              onClick={() => onDeleteClick(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteClick: PropTypes.func,\r\n};\r\n","import { Component} from 'react';\r\nimport {createPortal} from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot= document.querySelector('#modal-root');\r\nexport default class Modal extends Component{\r\n    componentDidMount(){\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n   componentWillUnmount(){\r\n    window.removeEventListener('keydown', this.handleKeyDown); \r\n   }\r\n\r\n   handleKeyDown=e=>{\r\n       if(e.code==='Escape'){\r\n           this.props.onClose();\r\n       }   \r\n   };\r\n   handleBackdropClick=e=>{\r\n       if(e.currentTarget===e.target){\r\n        this.props.onClose();  \r\n       }\r\n   };\r\n   render(){\r\n       return createPortal(\r\n           <div className={s.backdrop} onClick={this.handleBackdropClick}>\r\n               <div className={s.modalContent}>{this.props.children}</div>\r\n           </div>,\r\n           modalRoot,\r\n       );\r\n   }\r\n};\r\n","\r\nimport Filter from '../components/Filter/Filter';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport Modal from 'components/Modal/Modal';\r\nimport Container from 'components/Container/Container';\r\nimport { useState} from 'react';\r\n\r\n\r\nexport default function ContactsView() {\r\nconst {isModalOpen, setIsModalOpen}=useState(false);\r\nconst toggleModal=()=>setIsModalOpen(state=>!state);\r\n\r\n  \r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <Filter />\r\n      <ContactList />\r\n      {isModalOpen && (\r\n          <Modal onClose={toggleModal}>\r\n          <ContactForm  onSave={toggleModal}/>\r\n          <h2>Contacts </h2>\r\n          </Modal>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","\nimport { Switch, Route } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Container from \"components/Container/Container\";\nimport AppBar from \"components/AppBar/AppBar\";\nimport RegisterView from \"views/RegisterView\";\nimport LoginView from \"views/LoginView\";\nimport ContactsView from \"views/ContactsView\";\n  export default function App() {\n  \n  return (\n    <Container>\n      <AppBar/>\n\n      <Switch>\n        <Route path=\"/register\" component={RegisterView}/>\n        <Route path=\"/login\" component={LoginView}/>\n        <Route path=\"/contacts\" component={ContactsView}/>\n      </Switch>\n      <ToastContainer position=\"bottom-left\" autoClose={3000} />\n      </Container>\n      \n    \n  );\n};\n\n\n\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { logIn, logOut, register } from './auth-operations';\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logOut.fulfilled](state, _) {\r\n        state.user = { name: null, email: null };\r\n        state.token = null;\r\n        state.isLoggedIn = false;\r\n      },\r\n  },\r\n});\r\n\r\nconst authReducer = authSlice.reducer;\r\nexport default authReducer;\r\n","import contactReducer  from './contacts/contacts-redusers';\r\nimport authReducer from './auth/auth-slicer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: authReducer,\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport {store, persistor} from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}> \n    <PersistGate loading={null} persistor={persistor}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}