{"version":3,"sources":["views/View.module.css","components/ContactForm/ContactForm.module.css","components/AuthNav/AuthNav.module.css","components/ContactList/ContactList.module.css","components/Navigation/Navigation.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/AppBar/AppBar.module.css","components/Container/Container.js","redux/auth/auth-selectors.js","redux/auth/auth-operations.js","components/UserMenu/avatar.png","components/UserMenu/UserMenu.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","views/RegisterView.js","views/LoginView.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-slicer.js","redux/contacts/contacts-selectors.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","views/ContactsView.js","App.js","redux/auth/auth-slicer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","toast","success","error","logIn","logOut","fetchCurrentUser","_","thunkAPI","getState","persistedToken","rejectWithValue","get","UserMenu","dispatch","useDispatch","useSelector","avatar","defaultAvatar","userMenu","src","alt","width","userName","type","onClick","Navigation","to","exact","link","activeClassName","activeLink","AuthNav","AppBar","header","LoginView","useState","setName","email","setEmail","password","setPassword","onSubmit","e","preventDefault","form","autoComplete","label","value","onChange","target","fetchContacts","addContacts","contact","deleteContacts","id","delete","contactsSlice","createSlice","initialState","items","filter","reducers","changeFilter","payload","extraReducers","fulfilled","actions","contactReducer","reducer","getContacts","contacts","getFilter","getFilteredContacts","createSelector","toLowerCase","includes","Filter","findFild","inputFind","ContactForm","number","setNumber","uuidv4","find","alert","saveContacts","lable","input","pattern","title","required","submitBtn","PropsType","PropTypes","func","isRequired","ContactList","useEffect","contactList","map","icon","buttonDelete","onDeleteClick","ContactsView","App","path","component","RegisterView","position","autoClose","authReducer","action","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,sB,mBCApDD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,UAAY,iC,mBCArID,EAAOC,QAAU,CAAC,KAAO,sBAAsB,WAAa,8B,mBCA5DD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,aAAe,kCAAkC,KAAO,4B,wCCAjHD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,mBCA/DD,EAAOC,QAAU,CAAC,SAAW,yBAAyB,UAAY,4B,mBCAlED,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,yB,8KCCZ,SAASC,EAAT,GAA+B,IAAXC,EAAU,EAAVA,SAC/B,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,ICHlC,IAAMI,EAAe,SAAAC,GAAK,OAAGA,EAAMC,KAAKC,YAClCC,EAAY,SAAAH,GAAK,OAAEA,EAAMC,KAAKG,KAAKC,M,gDCGhDC,IAAMC,SAASC,QAAU,wCACzB,IAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,kBAAyDH,IAFvDA,EAAQ,SAINA,GACJH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAIrCC,EAAWC,YAAiB,gBAAD,uCAAkB,WAAMC,GAAN,iBAAAC,EAAA,+EAE/BV,IAAMW,KAAK,gBAAiBF,GAFG,uBAE9CG,EAF8C,EAE9CA,KACRT,EAAUS,EAAKT,OACfU,IAAMC,QAAQ,wCAJwC,kBAK/CF,GAL+C,kCAOtDC,IAAME,MAAM,aAP0C,0DAAlB,uDAW3BC,EAAQR,YAAiB,aAAD,uCAAe,WAAMC,GAAN,iBAAAC,EAAA,+EAEzBV,IAAMW,KAAK,eAAgBF,GAFF,uBAExCG,EAFwC,EAExCA,KACRT,EAAUS,EAAKT,OACfU,IAAMC,QAAQ,qBAJkC,kBAKzCF,GALyC,kCAOhDC,IAAME,MAAM,aAPoC,0DAAf,uDAWxBE,EAAST,YAAiB,cAAD,sBAAgB,sBAAAE,EAAA,+EAE5CV,IAAMW,KAAK,iBAFiC,OAGlDE,IAAMC,QAAQ,sBACdX,IAJkD,gDAMlDU,IAAME,MAAM,aANsC,0DAUzCG,EAAmBV,YAC9B,eAD8C,uCAE9C,WAAOW,EAAGC,GAAV,qBAAAV,EAAA,yDACQhB,EAAQ0B,EAASC,WAEA,QADjBC,EAAiB5B,EAAMC,KAAKQ,OAFpC,yCAIWiB,EAASG,mBAJpB,cAMEpB,EAAUmB,GANZ,kBAQ2BtB,IAAMwB,IAAI,kBARrC,uBAQYZ,EARZ,EAQYA,KARZ,kBASWA,GATX,kCAWIC,IAAME,MAAM,aAXhB,0DAF8C,yDC9CjC,MAA0B,mC,iBCM1B,SAASU,IACtB,IAAMC,EAAWC,cACX5B,EAAO6B,YAAY/B,GACnBgC,EAASC,EAEf,OACE,sBAAKxC,UAAWC,IAAEwC,SAAlB,UACE,qBAAKC,IAAKH,EAAQI,IAAI,SAASC,MAAM,KAAK5C,UAAWC,IAAEsC,SACvD,uBAAMvC,UAAWC,IAAE4C,SAAnB,uBAAwCpC,KACxC,wBAAQqC,KAAK,SAASC,QAAS,kBAAMX,EAAST,MAA9C,wB,sCCVS,SAASqB,IACtB,OACE,8BACE,cAAC,IAAD,CACEC,GAAG,YACHC,OAAK,EACLlD,UAAWC,IAAEkD,KACbC,gBAAiBnD,IAAEoD,WAJrB,wB,qBCJS,SAASC,IACtB,OACE,gCACE,cAAC,IAAD,CACEL,GAAG,YACHC,OAAK,EACLlD,UAAWC,IAAEkD,KACbC,gBAAiBnD,IAAEoD,WAJrB,0BAQA,cAAC,IAAD,CACEJ,GAAG,SACHC,OAAK,EACLlD,UAAWC,IAAEkD,KACbC,gBAAiBnD,IAAEoD,WAJrB,uBCLS,SAASE,IACtB,IAAMjD,EAAagC,YAAYnC,GAC/B,OACE,yBAAQH,UAAWC,IAAEuD,OAArB,UACE,cAACR,EAAD,IACC1C,EAAa,cAAC6B,EAAD,IAAe,cAACmB,EAAD,O,6BCVpB,SAASG,IACtB,IAAMrB,EAAWC,cACjB,EAAqBqB,mBAAS,IAA9B,mBAAOjD,EAAP,KAAYkD,EAAZ,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAgCH,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAQA,OACE,gCACE,8CACA,uBAAMC,SATW,SAAAC,GACnBA,EAAEC,iBACF9B,EAASnB,EAAS,CAAER,OAAMmD,QAAOE,eAOD9D,UAAWC,IAAEkE,KAAMC,aAAa,MAA9D,UACA,wBAAOpE,UAAWC,IAAEoE,MAApB,iBAEI,uBACEvB,KAAK,OACLrC,KAAK,OACL6D,MAAO7D,EACP8D,SAAU,SAAAN,GAAC,OAAIN,EAAQM,EAAEO,OAAOF,aAGpC,wBAAOtE,UAAWC,IAAEoE,MAApB,kBAEE,uBACEvB,KAAK,QACLrC,KAAK,QACL6D,MAAOV,EACPW,SAAU,SAAAN,GAAC,OAAIJ,EAASI,EAAEO,OAAOF,aAGrC,wBAAOtE,UAAWC,IAAEoE,MAApB,qBAEE,uBACEvB,KAAK,WACLrC,KAAK,WACL6D,MAAOR,EACPS,SAAU,SAAAN,GAAC,OAAIF,EAAYE,EAAEO,OAAOF,aAGxC,wBAAQxB,KAAK,SAAb,gCC3CO,SAASW,IACtB,IAAMrB,EAAWC,cACjB,EAA0BqB,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAgCH,mBAAS,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KASA,OACE,gCACE,wCACA,uBAAMC,SAVW,SAAAC,GACnBA,EAAEC,iBACF9B,EAASV,EAAM,CAAEkC,QAAOE,cACxBD,EAAS,IACTE,EAAY,KAMoB/D,UAAWC,IAAEkE,KAAMC,aAAa,MAA9D,UACE,wBAAOpE,UAAWC,IAAEoE,MAApB,kBAEE,uBACEvB,KAAK,QACLrC,KAAK,QACL6D,MAAOV,EACPW,SAAU,SAAAN,GAAC,OAAIJ,EAASI,EAAEO,OAAOF,aAGrC,wBAAOtE,UAAWC,IAAEoE,MAApB,qBAEE,uBACEvB,KAAK,WACLrC,KAAK,WACL6D,MAAOR,EACPS,SAAU,SAAAN,GAAC,OAAIF,EAAYE,EAAEO,OAAOF,aAGxC,wBAAQxB,KAAK,SAAb,yB,oBCnCRpC,IAAMC,SAASC,QAAU,wCAElB,I,EAAM6D,EAAgBvD,YAC3B,yBAD2C,sBAE3C,8BAAAE,EAAA,+EAE2BV,IAAMwB,IAAI,aAFrC,uBAEYZ,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,gCAKIC,IAAME,MAAM,yBALhB,0DAUWiD,EAAcxD,YACzB,uBADyC,uCAEzC,WAAMyD,GAAN,iBAAAvD,EAAA,+EAE2BV,IAAMW,KAAK,YAAasD,GAFnD,uBAEYrD,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,gCAKIC,IAAME,MAAM,sBALhB,yDAFyC,uDAY9BmD,EAAiB1D,YAC5B,0BAD4C,uCAE5C,WAAM2D,GAAN,SAAAzD,EAAA,+EAEUV,IAAMoE,OAAN,oBAA0BD,IAFpC,gCAGWA,GAHX,gCAKItD,IAAME,MAAM,yBALhB,wDAF4C,uDCvBxCsD,GAAgBC,YAAY,CAChCvE,KAAM,WACNwE,aAAc,CACZC,MAAO,GACPC,OAAQ,IAEVC,SAAU,CACRC,aAAc,SAACxD,EAAD,YAAMyD,UAEtBC,eAAa,mBACVd,EAAce,WAAY,SAACpF,EAAD,OAAUkF,EAAV,EAAUA,QAAV,OAAyBlF,EAAM8E,MAAQI,KADvD,cAEVZ,EAAYc,WAAY,SAACpF,EAAD,OAAUkF,EAAV,EAAUA,QAAV,OACvBlF,EAAM8E,MAAN,CAAeI,GAAf,mBAA0BlF,EAAM8E,WAHvB,cAIVN,EAAeY,WAAY,SAACpF,EAAD,OAAUkF,EAAV,EAAUA,QAAV,OAC1BlF,EAAM8E,MAAMC,QAAO,SAAAR,GAAO,OAAIA,EAAQE,KAAOS,QALpC,KASAD,GAAiBN,GAAcU,QAA/BJ,aAGAK,GADQX,GAAcY,Q,SCzBxBC,GAAc,SAAAxF,GAAK,OAAIA,EAAMyF,SAASX,OACtCY,GAAY,SAAA1F,GAAK,OAAIA,EAAMyF,SAASV,QAEpCY,GAAsBC,aACjC,CAACJ,GAAaE,KACd,SAACD,EAAUV,GAAX,OACEU,EAASV,QAAO,SAAAR,GAAO,OACrBA,EAAQlE,KAAKwF,cAAcC,SAASf,EAAOc,qB,oBCHlC,SAASE,KACtB,IAAM7B,EAAQhC,YAAYwD,IACpB1D,EAAWC,cAGjB,OACE,wBAAOrC,UAAWC,KAAEmG,SAApB,kCAEE,uBACEpG,UAAWC,KAAEoG,UACbvD,KAAK,OACLrC,KAAK,SACL6D,MAAOA,EACPC,SAVW,SAAAN,GAAC,OAAI7B,EAASiD,GAAapB,EAAEO,OAAOF,c,qDCAxC,SAASgC,KACtB,MAAwB5C,mBAAS,IAAjC,mBAAOjD,EAAP,KAAakD,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO6C,EAAP,KAAeC,EAAf,KAEMX,EAAWvD,YAAYsD,IACvBxD,EAAWC,cACXsC,EAAU,CAAEE,GAAI4B,eAAUhG,OAAM8F,UAoBtC,OACE,uBAAMvG,UAAWC,KAAEkE,KAAMH,SAlBN,SAAAC,GACnBA,EAAEC,iBAEkB2B,EAASa,MAC3B,SAAA/B,GAAO,OAAIA,EAAQlE,KAAKwF,gBAAkBxF,EAAKwF,iBAI/CU,MAAM,GAAD,OAAIlG,EAAJ,8BAVY,SAAAkE,GAAWvC,EAASsC,EAAYC,IAajDiC,CAAajC,GACbhB,EAAQ,IACR6C,EAAU,MAKZ,UACE,wBAAOxG,UAAWC,KAAE4G,MAApB,iBAEE,uBACE7G,UAAWC,KAAE6G,MACbhE,KAAK,OACLrC,KAAK,OACL6D,MAAO7D,EACPsG,QAAQ,yHACRC,MAAM,kcACNzC,SAAU,SAAAN,GAAC,OAAIN,EAAQM,EAAEO,OAAOF,QAChC2C,UAAQ,OAIZ,wBAAOjH,UAAWC,KAAE4G,MAApB,mBAEE,uBACE7G,UAAWC,KAAE6G,MACbhE,KAAK,MACLrC,KAAK,SACL6D,MAAOiC,EACPQ,QAAQ,yFACRC,MAAM,giBACNzC,SAAU,SAAAN,GAAC,OAAIuC,EAAUvC,EAAEO,OAAOF,QAClC2C,UAAQ,OAIZ,wBAAQnE,KAAK,SAAS9C,UAAWC,KAAEiH,UAAnC,4BAONZ,GAAYa,UAAY,CACtBnD,SAAUoD,KAAUC,KAAKC,Y,oCC9DZ,SAASC,KAEtB,IAAM1B,EAAWvD,YAAYyD,IACvB3D,EAAWC,cAIjB,OAFAmF,qBAAU,kBAAMpF,EAASqC,OAAkB,CAACrC,IAG1C,oBAAIpC,UAAWC,KAAEwH,YAAjB,SACG5B,EAAS6B,KAAI,YAA2B,IAAxB7C,EAAuB,EAAvBA,GAAIpE,EAAmB,EAAnBA,KAAM8F,EAAa,EAAbA,OACzB,OACE,qBAAavG,UAAWC,KAAE0E,QAA1B,UACE,cAAC,KAAD,CAAgB3E,UAAWC,KAAE0H,OAC7B,8BACGlH,EADH,KACW8F,KAEX,wBACEvG,UAAWC,KAAE2H,aACb9E,KAAK,SACLC,QAAS,kBAfC,SAAA8B,GAAE,OAAIzC,EAASwC,EAAeC,IAezBgD,CAAchD,IAH/B,sBALOA,QCbJ,SAASiD,KAKtB,OACE,eAAChI,EAAD,WACE,2CACA,cAACwG,GAAD,IACA,2CACA,cAACH,GAAD,IACA,cAACoB,GAAD,OCXW,SAASQ,KAExB,OACE,eAACjI,EAAD,WACE,cAACyD,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyE,KAAK,YAAYC,UAAWC,IACnC,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWxE,IAChC,cAAC,IAAD,CAAOuE,KAAK,YAAYC,UAAWH,QAErC,cAAC,IAAD,CAAgBK,SAAS,cAAcC,UAAW,SClBxD,IAiCeC,GA3BGrD,YAAY,CAC5BvE,KAAM,OACNwE,aARmB,CACnBzE,KAAM,CAAEC,KAAM,KAAMmD,MAAO,MAC3B/C,MAAO,KACPP,YAAY,GAMZiF,eAAa,qBACVtE,EAASuE,WADC,SACUpF,EAAOkI,GAC1BlI,EAAMI,KAAO8H,EAAOhD,QAAQ9E,KAC5BJ,EAAMS,MAAQyH,EAAOhD,QAAQzE,MAC7BT,EAAME,YAAa,KAJV,eAMVoB,EAAM8D,WANI,SAMOpF,EAAOkI,GACvBlI,EAAMI,KAAO8H,EAAOhD,QAAQ9E,KAC5BJ,EAAMS,MAAQyH,EAAOhD,QAAQzE,MAC7BT,EAAME,YAAa,KATV,eAWVqB,EAAO6D,WAXG,SAWQpF,EAAOkI,GACtBlI,EAAMI,KAAO,CAAEC,KAAM,KAAMmD,MAAO,MAClCxD,EAAMS,MAAQ,KACdT,EAAME,YAAa,KAdZ,eAgBTsB,EAAiB4D,WAhBR,SAgBmBpF,EAAOkI,GACnClI,EAAMI,KAAO8H,EAAOhD,QACpBlF,EAAME,YAAa,KAlBV,MAuBeqF,Q,iDClBxB4C,GAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdC,OAGIC,GAAoB,CACxBC,IAAKd,GACLe,aACAC,UAAW,CAAC,UAGDC,GAAQC,YAAe,CAClC5D,QAAS,CACPtF,KAAMmJ,aAAeN,GAAmBb,IACxCxC,SAAUH,IAEZ6C,cACAkB,UAAUC,IAGCC,GAAYC,aAAaN,IC9BtCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAQA,GAAlB,SACA,cAAC,IAAD,CAAaU,QAAS,KAAML,UAAWA,GAAvC,SACA,cAAC,IAAD,UACA,cAAC5B,GAAD,YAKFkC,SAASC,eAAe,W","file":"static/js/main.472b952e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"View_form__3HI_4\",\"label\":\"View_label__24Jrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2PRYH\",\"lable\":\"ContactForm_lable__2kXXu\",\"input\":\"ContactForm_input__cZ7WP\",\"submitBtn\":\"ContactForm_submitBtn__1emuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__SN7S7\",\"activeLink\":\"AuthNav_activeLink__I9oeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__UJB7S\",\"buttonDelete\":\"ContactList_buttonDelete__2P1_n\",\"icon\":\"ContactList_icon__2fHQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1i-09\",\"activeLink\":\"Navigation_activeLink__259Oj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findFild\":\"Filter_findFild__3ptQx\",\"inputFind\":\"Filter_inputFind__mcoH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1gecg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2vVBo\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({children}){\r\n    return <div className={s.container}>{children}</div>;\r\n}","export const getIsLoggedIn =state=> state.auth.isLoggedIn;\r\nexport const getUserName=state=>state.auth.user.name;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer  ${token}`;\r\n  },\r\n  unset(token) {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    toast.success('Congratulations, you are registered!');\r\n    return data;\r\n  } catch {\r\n    toast.error('Try again');\r\n  }\r\n});\r\n\r\nexport const logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    toast.success('You are loged in!');\r\n    return data;\r\n  } catch {\r\n    toast.error('Try again');\r\n  }\r\n});\r\n\r\nexport const logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    toast.success('You are loged out!');\r\n    token.unset();\r\n  } catch {\r\n    toast.error('Try again');\r\n  }\r\n});\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch {\r\n      toast.error('Try again');\r\n    }\r\n  },\r\n);\r\n","export default __webpack_public_path__ + \"static/media/avatar.d49c0a87.png\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport defaultAvatar from './avatar.png';\r\nimport s from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(getUserName);\r\n  const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div className={s.userMenu}>\r\n      <img src={avatar} alt=\"avatar\" width=\"34\" className={s.avatar} />\r\n      <span className={s.userName}>Wellcome, {name}</span>\r\n      <button type=\"button\" onClick={() => dispatch(logOut())}>\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './Navigation.module.css';\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Registartion\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Log In\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\n\r\nimport UserMenu from 'components/UserMenu/UserMenu';\r\n\r\nimport s from './AppBar.module.css';\r\nimport Navigation from 'components/Navigation/Navigation';\r\nimport AuthNav from 'components/AuthNav/AuthNav';\r\n\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { register} from '../redux/auth/auth-operations';\r\nimport s from './View.module.css';\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [name,setName]=useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(register({ name, email, password }));\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Registration</h1>\r\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n      <label className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Registartion</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {logIn } from '../redux/auth/auth-operations';\r\nimport s from './View.module.css';\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Log In</h1>\r\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n        <label className={s.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Enter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { toast } from 'react-toastify';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async () => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch {\r\n      toast.error('There are no contacts');\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContacts = createAsyncThunk(\r\n  'contacts/addContacts',\r\n  async contact => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      return data;\r\n    } catch {\r\n      toast.error(\"Cann't add contact\");\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n  'contacts/deleteContacts',\r\n  async id=> {\r\n    try {\r\n      await axios.delete(`/contacts/${id}`);\r\n      return id;\r\n    } catch {\r\n      toast.error(\"Cann't delete contact\");\r\n    }\r\n  },\r\n);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContacts,\r\n  addContacts,\r\n  deleteContacts,\r\n} from './contacts-operations';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    items: [],\r\n    filter: '',\r\n  },\r\n  reducers: {\r\n    changeFilter: (_, { payload }) => payload,\r\n  },\r\n  extraReducers: {\r\n    [fetchContacts.fulfilled]: (state, { payload }) => (state.items = payload),\r\n    [addContacts.fulfilled]: (state, { payload }) =>\r\n      state.items = [payload,...state.items],\r\n    [deleteContacts.fulfilled]: (state, { payload }) =>\r\n      state.items.filter(contact => contact.id !== payload),\r\n  },\r\n});\r\n\r\nexport const { changeFilter } = contactsSlice.actions;\r\n\r\nconst contactReducer = contactsSlice.reducer;\r\nexport default contactReducer;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { changeFilter } from 'redux/contacts/contacts-slicer';\r\nimport { getFilter } from 'redux/contacts/contacts-selectors';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.findFild}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.inputFind}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addContacts } from 'redux/contacts/contacts-operations';\r\nimport { getContacts } from 'redux/contacts/contacts-selectors';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const contact = { id: uuidv4(), name, number };\r\n  const saveContacts = contact => dispatch(addContacts(contact));\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const findContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (findContact) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    } else {\r\n      saveContacts(contact);\r\n      setName('');\r\n      setNumber('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.lable}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={e => setName(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={s.lable}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={e => setNumber(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.submitBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.PropsType = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { MdContactPhone } from 'react-icons/md';\r\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\r\nimport {\r\n  fetchContacts,\r\n  deleteContacts,\r\n} from 'redux/contacts/contacts-operations';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteClick = id => dispatch(deleteContacts(id));\r\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.contact}>\r\n            <MdContactPhone className={s.icon} />\r\n            <p>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              className={s.buttonDelete}\r\n              type=\"button\"\r\n              onClick={() => onDeleteClick(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteClick: PropTypes.func,\r\n};\r\n","\r\nimport Filter from '../components/Filter/Filter';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport ContactList from 'components/ContactList/ContactList';\r\n// import Modal from 'components/Modal/Modal';\r\nimport Container from 'components/Container/Container';\r\n// import { useState} from 'react';\r\n\r\n\r\nexport default function ContactsView() {\r\n// const {isModalOpen, setIsModalOpen}=useState(false);\r\n// const toggleModal=()=>setIsModalOpen(state=>!state);\r\n\r\n  \r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm  />\r\n      <h2>Contacts </h2>\r\n      <Filter />\r\n      <ContactList />\r\n      {/* {isModalOpen && (\r\n          <Modal onClose={toggleModal}>\r\n          <ContactForm  onSave={toggleModal}/>\r\n          <h2>Contacts </h2>\r\n          </Modal>\r\n      )} */}\r\n    </Container>\r\n  );\r\n}\r\n","\nimport { Switch, Route } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport Container from \"components/Container/Container\";\nimport AppBar from \"components/AppBar/AppBar\";\nimport RegisterView from \"views/RegisterView\";\nimport LoginView from \"views/LoginView\";\nimport ContactsView from \"views/ContactsView\";\n  export default function App() {\n  \n  return (\n    <Container>\n      <AppBar/>\n\n      <Switch>\n        <Route path=\"/register\" component={RegisterView}/>\n        <Route path=\"/login\" component={LoginView}/>\n        <Route path=\"/contacts\" component={ContactsView}/>\n      </Switch>\n      <ToastContainer position=\"bottom-left\" autoClose={3000} />\n      </Container>\n      \n    \n  );\n};\n\n\n\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { fetchCurrentUser, logIn, logOut, register } from './auth-operations';\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logOut.fulfilled](state, action) {\r\n        state.user = { name: null, email: null };\r\n        state.token = null;\r\n        state.isLoggedIn = false;\r\n      },\r\n     [fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n    }, \r\n  },\r\n});\r\n\r\nconst authReducer = authSlice.reducer;\r\nexport default authReducer;\r\n","import contactReducer  from './contacts/contacts-slicer';\r\nimport authReducer from './auth/auth-slicer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: authReducer,\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport {store, persistor} from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}> \n    <PersistGate loading={null} persistor={persistor}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}