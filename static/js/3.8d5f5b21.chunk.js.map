{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-selectors.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","views/ContactsView.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","Filter","value","useSelector","dispatch","useDispatch","className","s","findFild","inputFind","type","onChange","e","changeFilter","target","ContactForm","useState","setName","number","setNumber","id","uuidv4","form","onSubmit","preventDefault","find","alert","addContacts","saveContacts","lable","input","pattern","title","required","submitBtn","PropsType","PropTypes","func","isRequired","ContactList","useEffect","fetchContacts","contactList","map","icon","buttonDelete","onClick","deleteContacts","onDeleteClick","ContactsView","Container"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,SAAW,yBAAyB,UAAY,4B,mBCAlED,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,UAAY,iC,mBCArID,EAAOC,QAAU,CAAC,QAAU,6BAA6B,aAAe,kCAAkC,KAAO,4B,2GCCpGC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACtCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAEpCC,EAAsBC,YACjC,CAACP,EAAaI,IACd,SAACF,EAAUG,GAAX,OACEH,EAASG,QAAO,SAAAG,GAAO,OACrBA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,qB,wBCHlC,SAASE,IACtB,IAAMC,EAAQC,YAAYV,GACpBW,EAAWC,cAGjB,OACE,wBAAOC,UAAWC,IAAEC,SAApB,kCAEE,uBACEF,UAAWC,IAAEE,UACbC,KAAK,OACLZ,KAAK,SACLI,MAAOA,EACPS,SAVW,SAAAC,GAAC,OAAIR,EAASS,YAAaD,EAAEE,OAAOZ,c,qECAxC,SAASa,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOlB,EAAP,KAAamB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEM5B,EAAWY,YAAYd,GACvBe,EAAWC,cACXR,EAAU,CAAEuB,GAAIC,cAAUvB,OAAMoB,UAoBtC,OACE,uBAAMZ,UAAWC,IAAEe,KAAMC,SAlBN,SAAAX,GACnBA,EAAEY,iBAEkBjC,EAASkC,MAC3B,SAAA5B,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBD,EAAKC,iBAI/C2B,MAAM,GAAD,OAAI5B,EAAJ,8BAVY,SAAAD,GAAWO,EAASuB,YAAY9B,IAajD+B,CAAa/B,GACboB,EAAQ,IACRE,EAAU,MAKZ,UACE,wBAAOb,UAAWC,IAAEsB,MAApB,iBAEE,uBACEvB,UAAWC,IAAEuB,MACbpB,KAAK,OACLZ,KAAK,OACLI,MAAOJ,EACPiC,QAAQ,yHACRC,MAAM,kcACNrB,SAAU,SAAAC,GAAC,OAAIK,EAAQL,EAAEE,OAAOZ,QAChC+B,UAAQ,OAIZ,wBAAO3B,UAAWC,IAAEsB,MAApB,mBAEE,uBACEvB,UAAWC,IAAEuB,MACbpB,KAAK,MACLZ,KAAK,SACLI,MAAOgB,EACPa,QAAQ,yFACRC,MAAM,giBACNrB,SAAU,SAAAC,GAAC,OAAIO,EAAUP,EAAEE,OAAOZ,QAClC+B,UAAQ,OAIZ,wBAAQvB,KAAK,SAASJ,UAAWC,IAAE2B,UAAnC,4BAONnB,EAAYoB,UAAY,CACtBZ,SAAUa,IAAUC,KAAKC,Y,6BC9DZ,SAASC,IAEtB,IAAMhD,EAAWY,YAAYR,GACvBS,EAAWC,cAIjB,OAFAmC,qBAAU,kBAAMpC,EAASqC,iBAAkB,CAACrC,IAG1C,oBAAIE,UAAWC,IAAEmC,YAAjB,SACGnD,EAASoD,KAAI,YAA2B,IAAxBvB,EAAuB,EAAvBA,GAAItB,EAAmB,EAAnBA,KAAMoB,EAAa,EAAbA,OACzB,OACE,qBAAaZ,UAAWC,IAAEV,QAA1B,UACE,cAAC,IAAD,CAAgBS,UAAWC,IAAEqC,OAC7B,8BACG9C,EADH,KACWoB,KAEX,wBACEZ,UAAWC,IAAEsC,aACbnC,KAAK,SACLoC,QAAS,kBAfC,SAAA1B,GAAE,OAAIhB,EAAS2C,YAAe3B,IAezB4B,CAAc5B,IAH/B,sBALOA,Q,YChBJ,SAAS6B,IACtB,OACE,eAACC,EAAA,EAAD,WACE,2CACA,cAACnC,EAAD,IACA,2CACA,cAACd,EAAD,IACA,cAACsC,EAAD","file":"static/js/3.8d5f5b21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"findFild\":\"Filter_findFild__3ptQx\",\"inputFind\":\"Filter_inputFind__mcoH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2PRYH\",\"lable\":\"ContactForm_lable__2kXXu\",\"input\":\"ContactForm_input__cZ7WP\",\"submitBtn\":\"ContactForm_submitBtn__1emuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__UJB7S\",\"buttonDelete\":\"ContactList_buttonDelete__2P1_n\",\"icon\":\"ContactList_icon__2fHQO\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter ],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { changeFilter } from 'redux/contacts/contacts-slicer';\r\nimport { getFilter } from 'redux/contacts/contacts-selectors';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.findFild}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.inputFind}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addContacts } from 'redux/contacts/contacts-operations';\r\nimport { getContacts } from 'redux/contacts/contacts-selectors';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const contact = { id: uuidv4(), name, number };\r\n  const saveContacts = contact => dispatch(addContacts(contact));\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const findContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (findContact) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    } else {\r\n      saveContacts(contact);\r\n      setName('');\r\n      setNumber('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.lable}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={e => setName(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={s.lable}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={e => setNumber(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.submitBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.PropsType = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { MdContactPhone } from 'react-icons/md';\r\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\r\nimport {\r\n  fetchContacts,\r\n  deleteContacts,\r\n} from 'redux/contacts/contacts-operations';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteClick = id => dispatch(deleteContacts(id));\r\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.contact}>\r\n            <MdContactPhone className={s.icon} />\r\n            <p>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              className={s.buttonDelete}\r\n              type=\"button\"\r\n              onClick={() => onDeleteClick(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteClick: PropTypes.func,\r\n};\r\n","\r\nimport Filter from '../components/Filter/Filter';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport Container from 'components/Container/Container';\r\n\r\nexport default function ContactsView() {\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm  />\r\n      <h2>Contacts </h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}