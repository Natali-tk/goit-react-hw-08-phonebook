{"version":3,"sources":["redux/auth/auth-operations.js","components/AuthNav/AuthNav.module.css","components/UserMenu/UserMenu.module.css","components/Navigation/Navigation.module.css","redux/contacts/contacts-operations.js","components/Container/Container.js","redux/contacts/contacts-slicer.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/auth/auth-selectors.js","components/UserMenu/avatar.png","components/UserMenu/UserMenu.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/auth/auth-slicer.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","toast","success","error","message","logIn","logOut","_","fetchCurrentUser","getState","state","persistedToken","auth","get","module","exports","fetchContacts","addContacts","contact","deleteContacts","contactId","delete","Container","children","className","s","container","contactsSlice","createSlice","name","initialState","items","filter","reducers","changeFilter","payload","extraReducers","fulfilled","id","actions","getIsLoggedIn","isLoggedIn","getUserName","user","getFetchingCurrent","isFetchingCurrentUser","UserMenu","dispatch","useDispatch","useSelector","avatar","defaultAvatar","userMenu","src","alt","width","userName","type","btnLogout","onClick","Navigation","to","exact","link","activeClassName","activeLink","AuthNav","authNavigatin","AppBar","header","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","position","autoClose","authSlice","email","action","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3b4495a4.chunk.js","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/signup', credentials);\r\n      token.set(data.token);\r\n      toast.success('You are successfully registered');\r\n      return data;\r\n    } catch (error) {\r\n      toast.error('Please check, may be you registered')\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logIn = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/login', credentials);\r\n      token.set(data.token);\r\n      toast.success('You are successfully loged in');\r\n      return data;\r\n    } catch (error) {\r\n      toast.error('Please, try again');\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logOut = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n      token.unset();\r\n      toast.success('You are successfully loged out');\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, {getState,rejectWithValue}) => {\r\n    const state = getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__SN7S7\",\"activeLink\":\"AuthNav_activeLink__I9oeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"UserMenu_userMenu__3OIqe\",\"avatar\":\"UserMenu_avatar__3QU3c\",\"userName\":\"UserMenu_userName__16FiB\",\"btnLogout\":\"UserMenu_btnLogout__3ikVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1i-09\",\"activeLink\":\"Navigation_activeLink__259Oj\"};","import { toast } from 'react-toastify';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async () => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch(error) {\r\n      toast.error('There are no contacts');\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContacts = createAsyncThunk(\r\n  'contacts/addContacts',\r\n  async contact => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      return data;\r\n    } catch (error) {\r\n      toast.error(\"Cann't add contact\");\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n  'contacts/deleteContacts',\r\n  async contactId=> {\r\n    try {\r\n      await axios.delete(`/contacts/${contactId}`);\r\n      return contactId;\r\n    } catch (error) {\r\n      toast.error(\"Cann't delete contact\");\r\n    }\r\n  },\r\n);\r\n\r\n\r\n// export const updateContacts = createAsyncThunk(\r\n//   'contacts/updateContacts',\r\n//   async ({ contactId, ...contacts }) => {\r\n//     try{\r\n//       const {data}=  await axios.patch(`/contacts/${contactId}`, {...contact});\r\n//       return data\r\n//     }catch{\r\n//       toast.error(\"Cann't update contacts\");\r\n//     }\r\n//   },\r\n// )\r\n\r\n","import s from './Container.module.css';\r\n\r\nexport default function Container({children}){\r\n    return <div className={s.container}>{children}</div>;\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContacts,\r\n  addContacts,\r\n  deleteContacts,\r\n} from './contacts-operations';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    items: [],\r\n    filter: '',\r\n  },\r\n  reducers: {\r\n    changeFilter: (state, { payload }) => ({ ...state, filter: payload }),\r\n  },\r\n  extraReducers: {\r\n    [fetchContacts.fulfilled]: (state, { payload }) => ({\r\n      ...state,\r\n      items: payload,\r\n    }),\r\n    [addContacts.fulfilled]: (state, { payload }) => ({\r\n      ...state,\r\n      items: [...state.items, payload],\r\n    }),\r\n    [deleteContacts.fulfilled]: (state, { payload }) => ({\r\n      ...state,\r\n      items: state.items.filter(contact => contact.id !== payload),\r\n    }),\r\n  },\r\n});\r\n\r\nexport const { changeFilter } = contactsSlice.actions;\r\n\r\nexport default contactsSlice.reducer;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1gecg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2vVBo\"};","export const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getUserName = state => state.auth.user.name;\r\nexport const getFetchingCurrent=state=>state.auth.isFetchingCurrentUser;","export default __webpack_public_path__ + \"static/media/avatar.d49c0a87.png\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\nimport { logOut } from '../../redux/auth/auth-operations';\r\nimport defaultAvatar from './avatar.png';\r\nimport s from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(getUserName);\r\n  const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div className={s.userMenu}>\r\n      <img src={avatar} alt=\"avatar\" width=\"34\" className={s.avatar} />\r\n      <span className={s.userName}>Wellcome, {name}</span>\r\n      <button type=\"button\"className={s.btnLogout} onClick={() => dispatch(logOut())}>\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\r\n\r\nimport s from './Navigation.module.css';\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact className={s.link} activeClassName={s.activeLink}>\r\n        Home\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <>\r\n          <NavLink\r\n            to=\"/contacts\"\r\n            exact\r\n            className={s.link}\r\n            activeClassName={s.activeLink}\r\n          >\r\n            Contacts\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div className={s.authNavigatin}>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Log In\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\r\nimport UserMenu from 'components/UserMenu/UserMenu';\r\nimport s from './AppBar.module.css';\r\nimport Navigation from 'components/Navigation/Navigation';\r\nimport AuthNav from 'components/AuthNav/AuthNav';\r\n\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from 'redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}","import { Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, Suspense, lazy } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport Container from 'components/Container/Container';\nimport AppBar from 'components/AppBar/AppBar';\n// import RegisterView from 'views/RegisterView';\n// import LoginView from 'views/LoginView';\n// import ContactsView from 'views/ContactsView';\nimport PrivateRoute from 'components/PrivateRoute';\nimport { fetchCurrentUser } from 'redux/auth/auth-operations';\nimport PublicRoute from 'components/PublicRoute';\nimport { getFetchingCurrent } from 'redux/auth/auth-selectors';\nconst HomeView = lazy(() => import('views/HomeView'));\nconst RegisterView = lazy(() => import('views/RegisterView'));\nconst LoginView = lazy(() => import('views/LoginView'));\nconst ContactsView = lazy(() => import('views/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(getFetchingCurrent);\n  useEffect(() => dispatch(fetchCurrentUser()), [dispatch]);\n  return (\n    <Container>\n      {isFetchingCurrentUser ? (\n        <h2>Loading</h2>\n      ) : (\n        <>\n          <AppBar />\n\n          <Switch>\n            <Suspense fallback={<p>Загружаем...</p>}>\n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n              <PublicRoute exact path=\"/register\" restricted>\n                <RegisterView />\n              </PublicRoute>\n              <PublicRoute\n                exact\n                path=\"/login\"\n                redirectTo=\"/contacts\"\n                restricted\n              >\n                <LoginView />\n              </PublicRoute>\n              <PrivateRoute path=\"/contacts\">\n                <ContactsView />\n              </PrivateRoute>\n            </Suspense>\n          </Switch>\n          <ToastContainer position=\"bottom-left\" autoClose={3000} />\n        </>\n      )}\n    </Container>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { fetchCurrentUser, logIn, logOut, register } from './auth-operations';\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    \r\n    [logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logOut.fulfilled](state, _) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n      },\r\n    [fetchCurrentUser.pending](state,action) {\r\n        state.isFetchingCurrentUser = true;\r\n        state.token = action.payload.token;\r\n      },\r\n\r\n     [fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    }, \r\n    [fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n\r\n\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contacts-slicer\";\r\nimport authReducer from \"./auth/auth-slicer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport {store, persistor} from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}> \n    <PersistGate loading={null} persistor={persistor}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}